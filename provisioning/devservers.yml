---
- name: Configuring dev servers
  hosts: devservers
  sudo: yes

  vars:
    mysql_root_password: mysql_root_pass
    mysql_databases:
      - { name: achmed }
    mysql_users:
      - { name: achmed, password: achmed, database: achmed }
    mysql_server_config:
      performance_schema: "off"

    php_fpm_apt_packages:
      - php5-fpm
      - php5-cli 
      - php5-apcu
      - php5-mysql
      - php5-intl
      - php5-curl
      - php5-imagick
      - php5-xdebug

    php_fpm_pools:
      - name: vagrant
        user: vagrant
        group: vagrant
        listen: /var/run/php5-fpm-vagrant.sock
        listen.owner: www-data
        listen.group: www-data
        listen.mode: "0660"

    php_fpm_ini:
      # PHP section directives
      - option: "error_reporting"
        section: "PHP"
        value: "E_ALL"
      - option: "display_errors"
        section: "PHP"
        value: "on"
      - option: "display_startup_errors"
        section: "PHP"
        value: "on"
      - option: "log_errors"
        section: "PHP"
        value: "On"
      - option: "date.timezone"
        section: "PHP"
        value: "UTC"

    nginx_ubuntu_pkg:
      - nginx

    nginx_sites:
      vagrant:
         - listen 80
         - server_name {{ inventory_hostname }}
         - root /home/vagrant/web
         - access_log /var/log/nginx/{{ inventory_hostname }}.access_log
         - error_log /var/log/nginx/{{ inventory_hostname }}.error_log
         - "location / { try_files $uri /app.php$is_args$args; }"
         -  location ~ ^/(app|app_dev|config)\.php(/|$) {
            fastcgi_pass unix:/var/run/php5-fpm-vagrant.sock;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param HTTPS off;
          }

  roles:
    - percona-mysql
    - nbz4live.php-fpm
    - jdauphant.nginx
    - elasticsearch

  post_tasks:
    - name: install nodejs, npm, compass, git
      apt: pkg={{ item }} state=installed
      with_items:
       - nodejs-legacy
       - npm
       - ruby-compass
       - git

    - name: install bower
      npm: name=bower global=yes state=present

    - name: Install asset dependencies
      command: >
        bower install --production --silent
      args:
        chdir: "{{ project_path }}"
        creates: "{{ project_path }}/bower_components"
      sudo: no

    - name: Install composer
      get_url:
        url: https://getcomposer.org/composer.phar
        dest: "{{ project_path }}/composer.phar"
        mode: 0755
        validate_certs: no
        force: no #don't download if already exists
      sudo: no

    - name: Set composer github token
      command: "{{ project_path }}/composer.phar config -g github-oauth.github.com {{ github_token }}"
      sudo: no
      when: github_token is defined

    - name: Install dependencies
      command: >
        {{ project_path }}/composer.phar install --no-interaction
      args:
        chdir: "{{ project_path }}"
      sudo: no

    - name: Install database
      command: >
        php {{ project_path }}/app/console doctrine:schema:update --force
      sudo: no
